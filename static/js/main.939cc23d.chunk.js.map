{"version":3,"sources":["Components/GoodsCard/GoodsCard.jsx","Components/GoodsList/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsCard","good","GoodsList","goods","map","goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","confirmation","setConfirmation","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvB,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAWA,KAAMA,GAAWA,SCErBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,WAClBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA1BR,SAA0BX,EAA1B,GAA+D,IAA5BO,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACtCG,EAAa,YAAOZ,GAmB1B,OAjBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAOHO,CAAiBjB,EAAiB,CAAEK,YAAWE,iBAEnD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SAELD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAcJ,IAE5BoB,QAAS,WACPf,EAAaL,IAPjB,iCAaA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAcH,IAE5BmB,QAAS,WACPf,EAAaJ,IANjB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAab,IAEfc,QAAS,WACPb,GAAiBD,IANrB,sBAYEF,GAAaE,IAEX,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAa,IACbE,GAAgB,IALpB,sBAcN,cAAC,EAAD,CAAWV,MAAOW,QCzGxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.939cc23d.chunk.js","sourcesContent":["export const GoodsCard = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodsCard } from '../GoodsCard';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodsCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './Components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, confirmation }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (confirmation) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [confirmation, setConfirmation] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, confirmation });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          // className=\"button is-info is-light\"\n          className={cn('button', 'is-info', {\n            'is-ligth': sortField !== SORT_FIELD_NAME,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_NAME);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-ligth': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-ligth': !confirmation,\n          })}\n          onClick={() => {\n            setConfirmation(!confirmation);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || confirmation)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortField('');\n                setConfirmation(false);\n              }}\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}